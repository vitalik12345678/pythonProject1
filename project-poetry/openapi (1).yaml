openapi: 3.0.1
info:
  title: Advertisement
  description: This is a sample server Advertisement server.
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: /
tags:
  - name: Advertisement
    description: Everything about your advertisement

  - name: user
    description: Operations about user
paths:
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
          content: {}
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
          content: {}
  /Advertisement:
    put:
      tags:
        - advertisement
      summary: Update an existing advertisement
      operationId: updateAdvertisement
      requestBody:
        description: Advertisement object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adversiment'
          application/xml:
            schema:
              $ref: '#/components/schemas/Adversiment'
        required: true
      responses:
        '200':
          description: Good
          content: {}
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Adversiment not found
          content: {}
        '405':
          description: Validation exception
          content: {}
      security:
        - adv_auth:
            - write:adv
            - read:adv
      x-codegen-request-body-name: body
    post:
      tags:
        - advertisement
      summary: Add a new advertisement 
      operationId: addAdvertisement
      requestBody:
        description: Advertisement object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adversiment'
          application/xml:
            schema:
              $ref: '#/components/schemas/Adversiment'
        required: true
      responses:
        '200':
          description: successful operation
          content: {}
        '405':
          description: Invalid input
          content: {}
      security:
        - adv_auth:
            - write:adv
            - read:adv
      x-codegen-request-body-name: body

  /Advertisemnt/privateAdvertisement/{id}:
    get:
      tags:
        - advertisement
      summary: See private advertisement
      description: Returns a list advertisement
      operationId: getAdvertiseFentFroAll
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer  
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Adversiment'
            application/json:
              schema:
                $ref: '#/components/schemas/Adversiment'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Advertisement not found
          content: {}
      security:
        - adv_auth:
            - write:adv
            - read:adv  
  /Advertisement/{id}:
   
    delete:
      tags:
        - advertisement
      summary: Deletes a advertisement
      operationId: deleteAdvertisement
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer  
      
      responses:
        '200':
          description: Deleted
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Advertisement not found
          content: {}
      security:
        - adv_auth:
            - write:adv
            - read:adv
  /advertisement/localAdvertisement/{id}:
    get:
      tags:
        - advertisement
      summary: 'Returns local advertisement '
      description: Returns a map of status codes to quantities
      operationId: getLocalAdvertisement
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer  
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adversiment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Adversiment'
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
 
  /user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
          content: {}
        '404':
          description: User not found
          content: {}
      security:
        - adv_auth:
            - write:adv
            - read:adv
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '400':
          description: Invalid user supplied
          content: {}
        '404':
          description: User not found
          content: {}
      x-codegen-request-body-name: body
      security:
        - adv_auth:
            - write:adv
            - read:adv
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted
        '400':
          description: Invalid username supplied
          content: {}
        '404':
          description: User not found
          content: {}
      security:
        - adv_auth:
            - write:adv
            - read:adv
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
      xml:
        name: User
    Adversiment:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
        protectedStatus:
          type : boolean
        message:
          $ref: '#/components/schemas/Message'
        name:
          type: string
          example: Your adversement
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
      xml:
        name: Advertisement
    Message:
      required:
        - text
      type: object
      properties:
        id:
          type: integer
          format: int64
        
        text:
          type: string
          example: Your message
          items:
            type: string
      xml:
        name: message
  securitySchemes:
    adv_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/oauth/dialog
          scopes:
            write:adv: modify advertisement in your account
            read:adv: read your advertisement
    api_key:
      type: apiKey
      name: api_key
      in: header
